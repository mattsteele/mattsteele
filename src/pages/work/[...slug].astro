---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import Hero from "../../components/Hero.astro";
import Pill from "../../components/Pill.astro";
import ArrowLeftIcon from "../../assets/svgs/arrow-left.svg";
import { render } from "astro:content";

interface Props {
	entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const work = await getCollection("work");
	return work.map((entry) => ({
		params: { slug: entry.id },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="m-16 flex flex-col gap-20">
		<div class="flex flex-col gap-15">
			<header>
				<div class="wrapper flex flex-col gap-2">
					<a
						class="hidden md:block self-start text-decoration-none hover:text-decoration-underline"
						href="/work/"
					>
						<ArrowLeftIcon width="20px" height="20px" fill="white" />
						Work
					</a>
					<Hero title={entry.data.title} align="start">
						<div
							class="flex flex-col md:flex-row gap-6 md:gap-10 items-center md:items-start"
						>
							<p class="text-lg max-w-prose">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="flex flex-col gap-10 max-w-prose mx-auto">
					{
						entry.data.img && (
							<img
								class="rounded-lg shadow-sm bg-gradient-to-r from-gray-800 to-gray-900 border border-gray-800"
								src={entry.data.img}
								alt={entry.data.img_alt || ""}
							/>
						)
					}
					<div>
						<Content />
					</div>

					<div class="flex gap-2">
						{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
					</div>
					{
						entry.data.external_site_link && (
							<a
								class="button"
								rel="noopener noreferer"
								href={entry.data.external_site_link}
							>
								Visit Site
							</a>
						)
					}

					{
						entry.data.work_with_company_url && (
							<p>
								Work done with{" "}
								<a
									rel="noopener noreferer"
									href={entry.data.work_with_company_url}
									target="_blank"
								>
									{entry.data.work_with_company_name}
								</a>
							</p>
						)
					}
				</div>
			</main>
		</div>
	</div>
</BaseLayout>
